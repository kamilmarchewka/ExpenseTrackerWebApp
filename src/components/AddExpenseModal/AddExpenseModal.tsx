import { useState } from "react";
import ReactDOM from "react-dom";
import styles from "./AddExpenseModal.module.scss";

type Props = {
  changeMode: () => void;
  closeModal: () => void;
  addExpense: (expense: {
    id: number;
    name: string;
    date: string;
    price: number;
    category: number;
  }) => void;
};

const Modal = ({ closeModal, addExpense, changeMode }: Props) => {
  const [name, setName] = useState("");
  const [price, setPrice] = useState("");
  const [category, setCategory] = useState("1");

  const changeNameHandler = (e: any) => setName(e.target.value);
  const changePriceHandler = (e: any) => setPrice(e.target.value);

  const submitHandler = (e: any) => {
    e.preventDefault();

    const d = new Date();
    const day = d.getDate();
    const dayFormatted = day <= 9 ? `0${day}` : day;
    const month = d.getMonth() + 1;
    const monthFormatted = month <= 9 ? `0${month}` : month;
    const year = d.getFullYear();
    const date = `${dayFormatted}/${monthFormatted}/${year}`;

    addExpense({
      id: Math.random(),
      name: name,
      price: +price,
      category: +category,
      date: date,
    });
    closeModal();

    setName("");
    setPrice("");
    setCategory("1");
    changeMode();
  };

  return (
    <>
      <div onClick={closeModal} className={styles.overlay}></div>
      <div className={styles.modal}>
        <h2>Add new expense</h2>

        <form
          onSubmit={(e) => submitHandler(e)}
          onReset={closeModal}
          action="#"
          className={styles.form}>
          <div data-field="name" className={styles["input-box"]}>
            <input
              onChange={changeNameHandler}
              id="name"
              type="text"
              autoComplete="off"
              required
            />
            <label htmlFor="name" className={styles["input-box__label"]}>
              Name
            </label>
          </div>
          <div data-field="price" className={styles["input-box"]}>
            <span className={styles["dolar-sign"]}>$</span>
            <input
              onChange={changePriceHandler}
              id="price"
              type="number"
              required
            />
            <label htmlFor="price" className={styles["input-box__label"]}>
              Price
            </label>
          </div>
          {/* choosing category */}
          <div data-field="categories" className={styles["input-box"]}>
            <span className={`${styles["input-box__label"]} ${styles.static}`}>
              Category
            </span>

            {/* custom radio buttons */}
            {/* cat --- home */}
            <div>
              <input
                onChange={(e) => setCategory(e.target.value)}
                checked={category === "0"}
                id="cat-home"
                value="0"
                name="category"
                type="radio"
              />
              <label htmlFor="cat-home">
                <svg
                  width="30"
                  height="26"
                  viewBox="0 0 30 26"
                  xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_5_156)">
                    <path d="M29.2398 12.9746C29.2398 13.8887 28.4781 14.6047 27.6148 14.6047H25.9898L26.0254 22.7348C26.0254 22.8769 26.0152 23.009 26 23.1461V23.9687C26 25.091 25.091 26 23.9687 26H23.1562C23.1004 26 23.0445 25.9543 22.9887 25.9949C22.9176 25.9543 22.8465 26 22.7754 26H19.9062C18.784 26 17.875 25.091 17.875 23.9687V19.5C17.875 18.6012 17.1488 17.875 16.25 17.875H13C12.1012 17.875 11.375 18.6012 11.375 19.5V23.9687C11.375 25.091 10.466 26 9.34375 26H6.50508C6.4289 26 6.35273 25.9949 6.27656 25.9898C6.21562 25.9949 6.15469 26 6.09375 26H5.28125C4.15949 26 3.25 25.091 3.25 23.9687V18.2812C3.25 18.2355 3.25152 18.1848 3.25457 18.1391V14.6047H1.62754C0.711953 14.6047 0 13.8887 0 12.9746C0 12.5176 0.152547 12.1113 0.50832 11.7559L13.5281 0.407062C13.8836 0.0508828 14.2898 0 14.6453 0C15.0008 0 15.407 0.101766 15.7168 0.35618L28.6812 11.7559C29.0875 12.1113 29.2957 12.5176 29.2398 12.9746Z" />
                  </g>
                  <defs>
                    <clipPath id="clip0_5_156">
                      <rect width="29.25" height="26" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              </label>
            </div>
            {/* cat --- investment */}
            <div>
              <input
                onChange={(e) => setCategory(e.target.value)}
                checked={category === "1"}
                id="cat-investment"
                value="1"
                name="category"
                type="radio"
              />
              <label htmlFor="cat-investment">
                <svg
                  width="30"
                  height="26"
                  viewBox="0 0 30 26"
                  xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_5_77)">
                    <path d="M20.3125 4.875L20.2668 4.90851C20.0434 4.88617 19.7742 4.875 19.5 4.875H13C12.1621 4.875 11.3496 4.98062 10.5727 5.17969C10.5676 5.07812 10.5625 4.97758 10.5625 4.875C10.5625 2.18258 12.7004 0 15.4375 0C18.1289 0 20.3125 2.18258 20.3125 4.875ZM19.5 6.5C19.6777 6.5 19.8098 6.50508 20.0281 6.51523C20.2465 6.53047 20.4598 6.55078 20.668 6.58125C21.5617 5.54023 22.8922 4.875 24.375 4.875H26L25.0453 8.68867C25.8527 9.44023 26.5027 10.3543 26.9496 11.375H27.625C28.5238 11.375 29.25 12.1012 29.25 13V17.875C29.25 18.7738 28.5238 19.5 27.625 19.5H26C25.5379 20.1144 24.9894 20.6629 24.375 21.125V24.375C24.375 25.2738 23.6488 26 22.75 26H21.125C20.2262 26 19.5 25.2738 19.5 24.375V22.75H13V24.375C13 25.2738 12.2738 26 11.375 26H9.75C8.85117 26 8.125 25.2738 8.125 24.375V21.125C6.35273 19.7945 5.14414 17.7633 4.91512 15.4375H3.45312C1.54578 15.4375 0 13.8937 0 11.9844C0 10.075 1.54578 8.53125 3.45312 8.53125H3.65625C4.3291 8.53125 4.875 9.07461 4.875 9.75C4.875 10.4254 4.3291 10.9687 3.65625 10.9687H3.45312C2.89199 10.9687 2.4375 11.3801 2.4375 11.9844C2.4375 12.543 2.89199 13 3.45312 13H5.0375C5.65195 9.96328 7.96758 7.54101 10.9434 6.76406C11.5984 6.5914 12.2434 6.5 13 6.5H19.5ZM21.5312 12.1875C20.8559 12.1875 20.3125 12.7309 20.3125 13.4062C20.3125 14.0816 20.8559 14.625 21.5312 14.625C22.2066 14.625 22.75 14.0816 22.75 13.4062C22.75 12.7309 22.2066 12.1875 21.5312 12.1875Z" />
                  </g>
                  <defs>
                    <clipPath id="clip0_5_77">
                      <rect width="29.25" height="26" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              </label>
            </div>
            {/* cat --- food */}
            <div>
              <input
                onChange={(e) => setCategory(e.target.value)}
                checked={category === "2"}
                id="cat-food"
                value="2"
                name="category"
                type="radio"
              />
              <label htmlFor="cat-food">
                <svg
                  width="26"
                  height="26"
                  viewBox="0 0 26 26"
                  xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_5_75)">
                    <path d="M24.4715 13.716C24.9285 14.173 25.1875 14.7926 25.1875 15.4375C25.1875 16.0824 24.9285 16.702 24.4715 17.159C24.0145 17.616 23.3949 17.875 22.75 17.875H3.25C2.60356 17.875 1.98352 17.616 1.52649 17.159C1.06946 16.702 0.812503 16.0824 0.812503 15.4375C0.812503 14.7926 1.06946 14.173 1.52649 13.716C1.98352 13.259 2.60356 13 3.25 13H22.75C23.3949 13 24.0145 13.259 24.4715 13.716ZM24.1363 19.7387C24.2887 19.891 24.375 20.0992 24.375 20.3125V21.125C24.375 21.9426 24.0348 22.816 23.4254 23.4254C22.816 24.0348 21.9426 24.375 21.125 24.375H4.875C4.01324 24.375 3.18653 24.0348 2.57715 23.4254C1.96727 22.816 1.625 21.9426 1.625 21.125V20.3125C1.625 20.0992 1.71082 19.891 1.86317 19.7387C2.01551 19.5863 2.22219 19.5 2.4375 19.5H23.5625C23.7758 19.5 23.984 19.5863 24.1363 19.7387ZM2.55887 11.2125C2.33239 11.1008 2.13434 10.9434 1.97895 10.7453C1.82356 10.5473 1.7159 10.3187 1.66309 10.075C1.61028 9.82617 1.61485 9.57226 1.67528 9.32851C2.79196 4.9268 7.43945 1.625 13 1.625C18.5605 1.625 23.207 4.9268 24.3242 9.32851C24.3852 9.57226 24.3902 9.82617 24.3344 10.075C24.2836 10.3187 24.177 10.5473 24.0195 10.7453C23.8215 10.9434 23.6691 11.1008 23.4406 11.2125C23.2172 11.3191 22.9684 11.375 22.7144 11.375H3.28403C3.03317 11.375 2.78485 11.3191 2.55887 11.2125ZM18.9262 5.92617C18.7738 6.07852 18.6875 6.28672 18.6875 6.5C18.6875 6.6625 18.7332 6.81992 18.8246 6.95195C18.916 7.08398 18.9973 7.19062 19.1902 7.25156C19.3375 7.2668 19.5 7.32773 19.6574 7.29726C19.8148 7.2668 19.9621 7.19062 20.0738 7.07383C20.1906 6.96211 20.2668 6.81484 20.2973 6.65742C20.3277 6.5 20.2668 6.3375 20.2516 6.19023C20.1906 5.99726 20.084 5.91601 19.952 5.82461C19.8199 5.7332 19.6625 5.6418 19.5 5.6418C19.2867 5.6418 19.0785 5.77383 18.9262 5.92617ZM12.4262 4.30066C12.2738 4.45301 12.1875 4.65969 12.1875 4.875C12.1875 5.03547 12.2332 5.19492 12.3246 5.32695C12.416 5.45898 12.4973 5.56562 12.6902 5.62656C12.8375 5.6418 13 5.70273 13.1574 5.67227C13.3148 5.6418 13.4621 5.56562 13.5738 5.44883C13.6906 5.33711 13.7668 5.18984 13.7973 5.03344C13.8277 4.87602 13.7668 4.7125 13.7516 4.56422C13.6906 4.41543 13.584 4.28848 13.452 4.19961C13.3199 4.11023 13.1625 4.0168 13 4.0168C12.7867 4.0168 12.5785 4.14832 12.4262 4.30066ZM5.92617 5.92617C5.77383 6.07852 5.6875 6.28672 5.6875 6.5C5.6875 6.6625 5.7332 6.81992 5.82461 6.95195C5.91602 7.08398 5.99727 7.19062 6.19024 7.25156C6.3375 7.2668 6.5 7.32773 6.65742 7.29726C6.81485 7.2668 6.96211 7.19062 7.07383 7.07383C7.19063 6.96211 7.2668 6.81484 7.29727 6.65742C7.32774 6.5 7.2668 6.3375 7.25156 6.19023C7.19063 5.99726 7.08399 5.91601 6.95195 5.82461C6.81992 5.7332 6.6625 5.6418 6.5 5.6418C6.28672 5.6418 6.07852 5.77383 5.92617 5.92617Z" />
                  </g>
                  <defs>
                    <clipPath id="clip0_5_75">
                      <rect width="26" height="26" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              </label>
            </div>
            {/* cat --- education */}
            <div>
              <input
                onChange={(e) => setCategory(e.target.value)}
                checked={category === "3"}
                id="cat-education"
                value="3"
                name="category"
                type="radio"
              />
              <label htmlFor="cat-education">
                <svg
                  width="26"
                  height="26"
                  viewBox="0 0 26 26"
                  xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_5_71)">
                    <path d="M12.3599 0.131347C12.7661 -0.043823 13.2333 -0.043823 13.6396 0.131347L25.0146 5.0065C25.7255 5.31169 26.1216 6.07341 25.9642 6.82497C25.8118 7.58161 25.1466 8.07927 24.329 8.12497V8.53122C24.329 9.20661 23.8313 9.74997 23.1103 9.74997H2.79776C2.1701 9.74997 1.57901 9.20661 1.57901 8.53122V8.12497C0.853347 8.07927 0.188011 7.58161 0.0328643 6.82497C-0.122262 6.07341 0.275406 5.31169 0.984362 5.0065L12.3599 0.131347ZM12.9997 6.49997C13.8985 6.49997 14.6247 5.7738 14.6247 4.87497C14.6247 3.97767 13.8985 3.24998 12.9997 3.24998C12.1009 3.24998 11.3747 3.97767 11.3747 4.87497C11.3747 5.7738 12.1009 6.49997 12.9997 6.49997ZM6.45401 21.125H8.48526V11.375H11.7353V21.125H14.2185V11.375H17.4685V21.125H19.4997V11.375H22.7497V21.3433C22.7802 21.3586 22.8106 21.3332 22.8411 21.3992L25.2786 23.0242C25.8728 23.4203 26.1368 24.1617 25.9286 24.8472C25.7204 25.5328 25.0907 26 24.3747 26H1.57901C0.908698 26 0.276878 25.5328 0.0693862 24.8472C-0.138157 24.1617 0.127429 23.4203 0.723347 23.0242L3.16085 21.3992C3.18979 21.3332 3.21975 21.3586 3.20401 21.3433V11.375H6.45401V21.125Z" />
                  </g>
                  <defs>
                    <clipPath id="clip0_5_71">
                      <rect width="26" height="26" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              </label>
            </div>
            {/* cat --- entertainment */}
            <div>
              <input
                onChange={(e) => setCategory(e.target.value)}
                checked={category === "4"}
                id="cat-entertainment"
                value="4"
                name="category"
                type="radio"
              />
              <label htmlFor="cat-entertainment">
                <svg
                  width="33"
                  height="26"
                  viewBox="0 0 33 26"
                  xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_5_73)">
                    <path d="M27.8583 18.8602C25.7154 23.0953 21.3228 26 16.204 26C11.1767 26 6.78412 23.0953 4.64115 18.8602C4.86814 18.7078 5.08295 18.5352 5.28607 18.3371C5.6974 17.8801 5.95639 17.3926 6.12396 16.9813C6.30678 16.5395 6.45404 16.0469 6.57084 15.5848C6.80443 14.6606 6.95678 13.6653 7.03803 13.1371C7.24115 11.7914 6.08842 10.6387 4.74271 10.8317C4.39689 10.8825 3.91904 10.9535 3.39396 11.0551C4.33189 4.79886 9.72943 3.05176e-05 16.204 3.05176e-05C22.7701 3.05176e-05 28.1681 4.79886 29.1076 11.0551C28.5794 10.9535 28.1021 10.8825 27.7568 10.8317C26.4111 10.6387 25.2583 11.7914 25.4615 13.1371C25.497 13.6653 25.6493 14.6606 25.9286 15.5848C26.0454 16.0469 26.1927 16.5395 26.3755 16.9813C26.5431 17.3926 26.8021 17.8801 27.2134 18.3371C27.4165 18.5352 27.6298 18.7078 27.8583 18.8602ZM23.938 16.834C24.1919 16.2348 23.5826 15.6914 22.9579 15.8844C20.9419 16.4989 18.672 16.8492 16.265 16.8492C13.8579 16.8492 11.5829 16.4989 9.57201 15.8844C8.9474 15.6914 8.33803 16.2348 8.59193 16.834C9.85638 19.8352 12.8169 21.9375 16.265 21.9375C19.713 21.9375 22.6685 19.8352 23.938 16.834ZM14.2997 11.6188C14.4064 11.761 14.5892 11.8168 14.7517 11.761C14.9193 11.7051 14.9853 11.5477 14.9853 11.375C14.9853 10.466 14.6908 9.56722 14.188 8.8969C13.6904 8.23675 12.9744 7.71878 12.1415 7.71878C11.4001 7.71878 10.6841 8.23675 10.1865 8.8969C9.68373 9.56722 9.29779 10.466 9.29779 11.375C9.29779 11.5477 9.45521 11.7051 9.62279 11.761C9.78529 11.8168 9.9681 11.761 10.0747 11.6188L10.0849 11.6035C10.0951 11.5934 10.0595 11.5782 10.1204 11.5578C10.1103 11.5172 10.2017 11.4614 10.2626 11.3903C10.3896 11.243 10.5673 11.0551 10.7806 10.8215C11.2275 10.4711 11.7404 10.1563 12.1415 10.1563C12.6341 10.1563 13.147 10.4711 13.5939 10.8215C13.8072 11.0551 13.9849 11.243 14.1119 11.3903C14.1728 11.4614 14.2185 11.5172 14.254 11.5578C14.2693 11.5782 14.2794 11.5934 14.2896 11.6035L14.2997 11.6188ZM22.8767 11.761C23.0443 11.7051 23.156 11.5477 23.156 11.375C23.156 10.466 22.8158 9.56722 22.313 8.8969C21.8154 8.23675 21.0993 7.71878 20.3122 7.71878C19.5251 7.71878 18.8091 8.23675 18.3115 8.8969C17.8087 9.56722 17.4685 10.466 17.4685 11.375C17.4685 11.5477 17.5802 11.7051 17.7478 11.761C17.9103 11.8168 18.0931 11.761 18.1997 11.6188L18.2099 11.6035C18.2201 11.5934 18.1845 11.5782 18.2454 11.5578C18.2353 11.5172 18.3267 11.4614 18.3876 11.3903C18.5146 11.243 18.6923 11.0551 18.9056 10.8215C19.3525 10.4711 19.8654 10.1563 20.3122 10.1563C20.7591 10.1563 21.272 10.4711 21.7189 10.8215C21.9322 11.0551 22.1099 11.243 22.2369 11.3903C22.2978 11.4614 22.3435 11.5172 22.379 11.5578C22.3943 11.5782 22.4044 11.5934 22.4146 11.6035L22.4247 11.6188C22.5314 11.761 22.7142 11.8168 22.8767 11.761ZM5.38764 12.9035C5.27592 13.9953 4.85342 16.4684 4.13486 17.1844C4.08713 17.2352 4.03736 17.2809 3.98607 17.3215C3.0456 18.1137 1.62525 18.0528 0.724394 17.1489C-0.225825 16.1992 -0.245274 14.6707 0.687831 13.7414C1.12658 13.2996 2.21838 12.9696 3.25228 12.7004C3.91092 12.6039 4.54619 12.5024 4.97326 12.4414C5.24545 12.4008 5.47396 12.6293 5.38764 12.9035ZM28.5134 17.3215C28.4728 17.291 28.3915 17.2555 28.3966 17.2199C28.3865 17.2098 28.3763 17.1996 28.3661 17.1844C27.6451 16.4684 27.2236 13.9953 27.0661 12.9035C27.0255 12.6293 27.254 12.4008 27.5283 12.4414C27.579 12.4516 27.6349 12.4567 27.6958 12.4668C28.1122 12.5278 28.6708 12.6192 29.204 12.7004C30.2806 12.9696 31.3724 13.2996 31.8091 13.7414C32.7435 14.6707 32.7232 16.1992 31.7736 17.1489C30.829 18.0528 29.4529 18.1137 28.5134 17.3215Z" />
                  </g>
                  <defs>
                    <clipPath id="clip0_5_73">
                      <rect width="32.5" height="26" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              </label>
            </div>
          </div>

          {/* buttons */}
          <div className={styles["btn-wrapper"]}>
            <button type="submit">Add item</button>
            <button type="reset">Cancel</button>
          </div>
        </form>
      </div>
    </>
  );
};

const AddExpenseModal = ({ closeModal, addExpense, changeMode }: Props) => {
  const modalRoot: Element = document.getElementById("modals-root")!;

  return ReactDOM.createPortal(
    <Modal
      addExpense={addExpense}
      closeModal={closeModal}
      changeMode={changeMode}
    />,
    modalRoot
  );
};

export default AddExpenseModal;
